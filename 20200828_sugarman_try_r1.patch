diff --git a/burger_navigation/CMakeLists.txt b/burger_navigation/CMakeLists.txt
index 399008d..c3ebee2 100644
--- a/burger_navigation/CMakeLists.txt
+++ b/burger_navigation/CMakeLists.txt
@@ -1,5 +1,5 @@
 cmake_minimum_required(VERSION 2.8.3)
-project(burger_navigation)
+project(burger_navigation_level6)
 
 ## Compile as C++11, supported in ROS Kinetic and newer
 # add_compile_options(-std=c++11)
diff --git a/burger_navigation/launch/burger_navigation.launch b/burger_navigation/launch/burger_navigation.launch
index c60c41d..4887cc2 100644
--- a/burger_navigation/launch/burger_navigation.launch
+++ b/burger_navigation/launch/burger_navigation.launch
@@ -2,8 +2,8 @@
 
 <launch>
   <!-- Arguments -->
-  <arg name="map_file" default="$(find burger_navigation)/maps/map.yaml"/>
-  <arg name="open_rviz" default="true"/>
+  <arg name="map_file" default="$(find burger_navigation_level6)/maps/map.yaml"/>
+  <arg name="open_rviz" default="false"/>
   <arg name="move_forward_only" default="false"/>
   <arg name="cmd_vel_topic" default="cmd_vel" />
   <arg name="odom_topic" default="odom" />
@@ -11,9 +11,11 @@
   <arg name="initial_pose_x" default="-1.3"/>
   <arg name="initial_pose_y" default="0.0"/>
   <arg name="initial_pose_a" default="0.0"/>
+  <arg name="robot_namespace" default=""/>
 
   <!-- Map server -->
   <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)">
+    <param name="frame_id"  value="$(arg robot_namespace)/map"/>
   </node>
 
 
@@ -50,36 +52,36 @@
     <param name="odom_alpha2"               value="0.1"/>
     <param name="odom_alpha3"               value="0.1"/>
     <param name="odom_alpha4"               value="0.1"/>
-    <param name="odom_frame_id"             value="odom"/>
-    <param name="base_frame_id"             value="base_footprint"/>
-    <param name="global_frame_id"           value="map"/>
+    <param name="odom_frame_id"             value="$(arg robot_namespace)/odom"/>
+    <param name="base_frame_id"             value="$(arg robot_namespace)/base_footprint"/>
+    <param name="global_frame_id"           value="$(arg robot_namespace)/map"/>
   </node>
 
 
   <!-- move_base -->
   <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
     <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
-    <rosparam file="$(find burger_navigation)/param/costmap_common_params_burger.yaml" command="load" ns="global_costmap" />
-    <rosparam file="$(find burger_navigation)/param/costmap_common_params_burger.yaml" command="load" ns="local_costmap" />
-    <rosparam file="$(find burger_navigation)/param/local_costmap_params.yaml" command="load" />
-    <rosparam file="$(find burger_navigation)/param/global_costmap_params.yaml" command="load" />
-    <rosparam file="$(find burger_navigation)/param/move_base_params.yaml" command="load" />
-    <rosparam file="$(find burger_navigation)/param/dwa_local_planner_params_burger.yaml" command="load" />
+    <rosparam file="$(find burger_navigation_level6)/param/costmap_common_params_burger.yaml" command="load" ns="global_costmap" />
+    <rosparam file="$(find burger_navigation_level6)/param/costmap_common_params_burger.yaml" command="load" ns="local_costmap" />
+    <rosparam file="$(find burger_navigation_level6)/param/local_costmap_params.yaml" command="load" />
+    <rosparam file="$(find burger_navigation_level6)/param/global_costmap_params.yaml" command="load" />
+    <rosparam file="$(find burger_navigation_level6)/param/move_base_params.yaml" command="load" />
+    <rosparam file="$(find burger_navigation_level6)/param/dwa_local_planner_params_burger.yaml" command="load" />
     <remap from="cmd_vel" to="$(arg cmd_vel_topic)"/>
     <remap from="odom" to="$(arg odom_topic)"/>
     <param name="DWAPlannerROS/min_vel_x" value="0.0" if="$(arg move_forward_only)" />
 
-    <param name="local_costmap/global_frame"             value="odom"/>
-    <param name="local_costmap/robot_base_frame"             value="base_link"/>
-    <param name="local_costmap/scan/sensor_frame"             value="base_scan"/>
-    <param name="global_costmap/robot_base_frame"            value="base_link"/>
-    <param name="global_costmap/global_frame"            value="map"/>
-    <param name="global_costmap/scan/sensor_frame"             value="base_scan"/>
+    <param name="local_costmap/global_frame"             value="$(arg robot_namespace)/odom"/>
+    <param name="local_costmap/robot_base_frame"             value="$(arg robot_namespace)/base_link"/>
+    <param name="local_costmap/scan/sensor_frame"             value="$(arg robot_namespace)/base_scan"/>
+    <param name="global_costmap/robot_base_frame"            value="$(arg robot_namespace)/base_link"/>
+    <param name="global_costmap/global_frame"            value="$(arg robot_namespace)/map"/>
+    <param name="global_costmap/scan/sensor_frame"             value="$(arg robot_namespace)/base_scan"/>
   </node>
 
   <!-- rviz -->
   <group if="$(arg open_rviz)"> 
-    <node pkg="rviz" type="rviz" name="rviz" required="true" args="-d $(find burger_navigation)/rviz/burger_navigation.rviz">
+    <node pkg="rviz" type="rviz" name="rviz" required="true" args="-d $(find burger_navigation_level6)/rviz/burger_navigation.rviz">
       <remap from="/move_base_simple/goal" to="move_base_simple/goal"/>
     </node>
   </group>
diff --git a/burger_navigation/package.xml b/burger_navigation/package.xml
index f5d1ba2..083c11f 100644
--- a/burger_navigation/package.xml
+++ b/burger_navigation/package.xml
@@ -1,6 +1,6 @@
 <?xml version="1.0"?>
 <package>
-  <name>burger_navigation</name>
+  <name>burger_navigation_level6</name>
   <version>0.0.0</version>
   <description>The burger_navigation package</description>
 
diff --git a/burger_war/CMakeLists.txt b/burger_war/CMakeLists.txt
index f36baef..0db4abc 100644
--- a/burger_war/CMakeLists.txt
+++ b/burger_war/CMakeLists.txt
@@ -1,5 +1,5 @@
 cmake_minimum_required(VERSION 2.8.3)
-project(burger_war)
+project(burger_war_level6)
 
 ## Compile as C++11, supported in ROS Kinetic and newer
 # add_compile_options(-std=c++11)
@@ -207,4 +207,4 @@ include_directories(
 
 
 add_executable(randomRun src/randomRun.cpp)
-target_link_libraries(randomRun ${catkin_LIBRARIES})
\ No newline at end of file
+target_link_libraries(randomRun ${catkin_LIBRARIES})
diff --git a/burger_war/launch/sim_robot_run.launch b/burger_war/launch/sim_robot_run.launch
index 34e6f46..36bd582 100644
--- a/burger_war/launch/sim_robot_run.launch
+++ b/burger_war/launch/sim_robot_run.launch
@@ -3,33 +3,12 @@
   <arg name="enemy_level" default="1"/>
 
 <!-- Your robot control node run  red side-->
-  <include file="$(find burger_war)/launch/your_burger.launch">
-    <arg name="side" value="r" />
+<group ns="enemy_bot">
+  <include file="$(find burger_war_level6)/launch/your_burger.launch">
+    <arg name="robot_namespace" value="enemy_bot" />
+    <arg name="side" value="b" />
   </include>
-
-<!-- enemy bot run  blue side-->
-  <group ns="enemy_bot">
-    <!-- level 1 (default) -->
-    <group if="$(eval enemy_level==1)"> 
-      <include file="$(find burger_war)/launch/sim_level_1_cheese.launch">
-        <arg name="name_space" value="enemy_bot" />
-      </include>  
-    </group>
-
-    <!-- level 2 (if you want to run , set launch arg enemy_level=2 --> 
-    <group if="$(eval enemy_level==2)"> 
-      <include file="$(find burger_war)/launch/sim_level_2_teriyaki.launch">
-        <arg name="name_space" value="enemy_bot" />
-      </include>  
-    </group>
-
-    <!-- level 3 (if you want to run , set launch arg enemy_level=3 --> 
-    <group if="$(eval enemy_level==3)"> 
-      <include file="$(find burger_war)/launch/sim_level_3_clubhouse.launch">
-        <arg name="name_space" value="enemy_bot" />
-      </include>  
-    </group>
-  </group>
+</group>
 
 </launch>
 
diff --git a/burger_war/launch/your_burger.launch b/burger_war/launch/your_burger.launch
index 42e90e0..6fec3ee 100644
--- a/burger_war/launch/your_burger.launch
+++ b/burger_war/launch/your_burger.launch
@@ -1,15 +1,17 @@
 <?xml version="1.0"?>
 <launch>
   <arg name="side" default="r"/> <!-- "b" = blue side, "r" = red side  -->
-
+  <arg name="robot_namespace" default=""/>
     <!-- You can change control program  -->
 
 
     <!-- sample program node -->
-    <include file="$(find burger_navigation)/launch/burger_navigation.launch">
+    <include file="$(find burger_navigation_level6)/launch/burger_navigation.launch">
+      <arg name="robot_namespace" default="$(arg robot_namespace)"/>
     </include>
 
-    <node pkg="burger_war" type="sugarman_2.py" name="SugarMan" output="screen">
+    <node pkg="burger_war_level6" type="sugarman_2.py" name="SugarMan" output="screen">
+      <param name="robot_namespace" value="$(arg robot_namespace)" />
     </node>
 
     <!-- END sample program node -->
diff --git a/burger_war/package.xml b/burger_war/package.xml
index bf46832..9ff421d 100644
--- a/burger_war/package.xml
+++ b/burger_war/package.xml
@@ -1,6 +1,6 @@
 <?xml version="1.0"?>
 <package>
-  <name>burger_war</name>
+  <name>burger_war_level6</name>
   <version>0.0.0</version>
   <description>The burger_war package</description>
 
diff --git a/burger_war/scripts/sugarman_2.py b/burger_war/scripts/sugarman_2.py
index de6bbba..7bacea7 100755
--- a/burger_war/scripts/sugarman_2.py
+++ b/burger_war/scripts/sugarman_2.py
@@ -26,7 +26,7 @@ class NaviBot():
         # velocity publisher
         self.vel_pub = rospy.Publisher('cmd_vel', Twist,queue_size=1)
         self.client = actionlib.SimpleActionClient('move_base',MoveBaseAction)
-
+        self.robot_namespace = rospy.get_param('~robot_namespace')
 
 
 
@@ -34,7 +34,7 @@ class NaviBot():
         self.client.wait_for_server()
 
         goal = MoveBaseGoal()
-        goal.target_pose.header.frame_id = "/map"
+        goal.target_pose.header.frame_id = self.robot_namespace+"/map"
         goal.target_pose.header.stamp = rospy.Time.now()
         goal.target_pose.pose.position.x = x
         goal.target_pose.pose.position.y = y
@@ -92,4 +92,4 @@ class NaviBot():
 if __name__ == '__main__':
     rospy.init_node('navirun')
     bot = NaviBot()
-    bot.strategy()
\ No newline at end of file
+    bot.strategy()
diff --git a/scripts/sim_with_judge.sh b/scripts/sim_with_judge.sh
index ee496e6..7d8ada8 100644
--- a/scripts/sim_with_judge.sh
+++ b/scripts/sim_with_judge.sh
@@ -11,5 +11,5 @@ gnome-terminal -e "python judge/visualizeWindow.py"
 bash judge/test_scripts/init_single_play.sh judge/marker_set/sim.csv localhost:5000 you enemy
 
 # robot
-roslaunch burger_war setup_sim.launch
+roslaunch burger_war_level6 setup_sim.launch
 
diff --git a/scripts/start.sh b/scripts/start.sh
index 7033255..e8251af 100644
--- a/scripts/start.sh
+++ b/scripts/start.sh
@@ -16,4 +16,4 @@ done
 bash judge/test_scripts/set_running.sh localhost:5000
 
 # launch robot control node
-roslaunch burger_war sim_robot_run.launch enemy_level:=$VALUE_L
+roslaunch burger_war_level6 sim_robot_run.launch enemy_level:=$VALUE_L
