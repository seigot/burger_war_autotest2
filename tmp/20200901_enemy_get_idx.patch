diff --git a/burger_war/scripts/seigoRun2.py b/burger_war/scripts/seigoRun2.py
index 7ce9fb1..9d93fd8 100755
--- a/burger_war/scripts/seigoRun2.py
+++ b/burger_war/scripts/seigoRun2.py
@@ -56,10 +56,10 @@ class SeigoBot2:
     def __init__(self):
 
         def load_waypoint():
-            rospack=rospkg.RosPack()
-            path=os.path.join(rospack.get_path("burger_war"),"scripts","waypoints.csv")
-            #path = os.environ['HOME'] + \
-            #    '/catkin_ws/src/burger_war/burger_war/scripts/waypoints.csv'
+            #rospack=rospkg.RosPack()
+            #path=os.path.join(rospack.get_path("burger_war"),"scripts","waypoints.csv")
+            path = os.environ['HOME'] + \
+                '/catkin_ws/src/burger_war/burger_war/scripts/waypoints.csv'
             return Waypoints(path, self.my_side)
 
         self.listener = tf.TransformListener()
@@ -86,12 +86,14 @@ class SeigoBot2:
         self.camera_detect_angle = -360
 
         rospy.Timer(rospy.Duration(0.1), self.WarState_timerCallback)
+        self.game_timestamp = 0
         self.my_score = 0
         self.enemy_score = 0
         self.Is_lowwer_score = False
         self.all_field_score = np.ones([18])  # field score state
-        self.enemy_target = -1
-        self.enemy_target_get_timestamp = rospy.Time.now()
+        self.all_field_score_prev = np.ones([18])  # field score state (previous)
+        self.enemy_target_idx = -1
+        self.enemy_target_idx_game_timestamp = -1
         self.enemy_body_remain = 3
 
         self.direct_twist_pub = rospy.Publisher('cmd_vel', Twist, queue_size=1)
@@ -239,6 +241,8 @@ class SeigoBot2:
             self.my_score = int(dic["scores"]["b"])
             self.enemy_score = int(dic["scores"]["r"])
 
+        self.game_timestamp = int(dic["time"])
+        
         # get warstate score state
         for idx in range(18):  # number of field targets, how to get the number?
             target_state = dic["targets"][idx]["player"]
@@ -248,7 +252,13 @@ class SeigoBot2:
                 self.all_field_score[idx] = 0  # my_bot get this target
             else:
                 self.all_field_score[idx] = 2  # enemy get this target
-            # print(target_state)
+                if self.all_field_score[idx] != self.all_field_score_prev[idx]:
+                    print("enemy get target No.", idx, self.game_timestamp)
+                    self.enemy_target_idx = idx
+                    self.enemy_target_idx_game_timestamp = self.game_timestamp
+        # update field score state to check enemy get target
+        self.all_field_score_prev = self.all_field_score 
+
         self.waypoint.set_field_score(self.all_field_score[6:])
         
         # update body AR marker point
